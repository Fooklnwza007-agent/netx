/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JFrame.java to edit this template
 */
package com.mycompany.dormnew.GUI;

import java.awt.event.ActionEvent;
import java.io.BufferedReader;
import java.io.FileReader;
import java.io.FileWriter;
import java.io.IOException;
import java.io.PrintWriter;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author AVS_KTB
 */
public class Admin extends javax.swing.JFrame {
    
    private static final java.util.logging.Logger logger = java.util.logging.Logger.getLogger(Admin.class.getName());
    
    
    DefaultTableModel requestModel,UserModel;
    /**
     * Creates new form Admin
     */
    public Admin() {
        initComponents();
        setLocationRelativeTo(null); // แสดงตรงกลางจอ
        
        
        requestModel = new DefaultTableModel(new String[]{"Room", "Firstname", "Lastname","Phone_num","status"}, 0);
        requestTable.setModel(requestModel);
        UserModel = new DefaultTableModel(new String[]{"Room", "Firstname", "Lastname","Phone_num"}, 0);
        userTable.setModel(UserModel);
        
        loadCSV(UserModel, "src/main/java/com/mycompany/dormnew/File/User_admin.csv");
        
        
        //loadCSV(requestModel, "src/main/java/com/mycompany/dormnew/File/requests.csv");
        loadDormList(); //load
    }
    
    private void loadDormList() {
    String filePath = "src/main/java/com/mycompany/dormnew/File/dormlist.csv";
    try (BufferedReader br = new BufferedReader(new FileReader(filePath))) {
        String line;
        DormSelect.removeAllItems();
        while ((line = br.readLine()) != null) {
            String[] data = line.split(",");
            if (data.length > 0) {
                DormSelect.addItem(data[0]); // ชื่อหออยู่คอลัมน์แรก
            }
        }
    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "Load dorm list failed!", "ERROR", JOptionPane.ERROR_MESSAGE);
    }
}
    
    private void loadCSV(DefaultTableModel model, String fileName) {
        try (BufferedReader br = new BufferedReader(new FileReader(fileName))) {
            String line;
            br.readLine(); // skip header
            while ((line = br.readLine()) != null) {
                String[] data = line.split(",");
                model.addRow(data);
            }
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "load Failed " + fileName, "WARNING", JOptionPane.WARNING_MESSAGE);
        }
    }
    
    // ฟังก์ชันบันทึกกลับ CSV (ใช้ได้ทั้งสองตาราง)
    private void saveCSV(DefaultTableModel model, String fileName) {
        try (PrintWriter pw = new PrintWriter(new FileWriter(fileName))) {
            for (int i = 0; i < model.getRowCount(); i++) {
                for (int j = 0; j < model.getColumnCount(); j++) {
                    pw.print(model.getValueAt(i, j));
                    if (j < model.getColumnCount() - 1) pw.print(",");
                }
                pw.println();
            }
            JOptionPane.showMessageDialog(this, "add Dorm : " + fileName + " Complete!");
        } catch (IOException e) {
            JOptionPane.showMessageDialog(this, "add Dorm : " + fileName + "failed");
        }
        
        
    
    }
    private void addDormToCSV(String dormName) {
    String filePath = "src/main/java/com/mycompany/dormnew/File/Dormlist.csv";
    try {
        java.io.File file = new java.io.File(filePath);
        if (!file.exists()) {
            file.createNewFile(); //  สร้างไฟล์ใหม่ถ้ายังไม่มี
        }

        try (FileWriter fw = new FileWriter(file, true)) { // true = append mode
            fw.write(dormName + "\n");
        }

    } catch (IOException e) {
        JOptionPane.showMessageDialog(this, "add failed: " + e.getMessage());
    }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        requestTable = new javax.swing.JTable();
        adminText = new javax.swing.JLabel();
        Approve = new javax.swing.JButton();
        Reject = new javax.swing.JButton();
        save_to_csv = new javax.swing.JButton();
        jButton1 = new javax.swing.JButton();
        jScrollPane2 = new javax.swing.JScrollPane();
        userTable = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        Approve1 = new javax.swing.JButton();
        save_to_csv1 = new javax.swing.JButton();
        DormSelect = new javax.swing.JComboBox<>();
        jButton3 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();

        jLabel1.setText("jLabel1");

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Admin");
        setBackground(new java.awt.Color(255, 255, 255));

        jPanel1.setBackground(new java.awt.Color(255, 255, 255));
        jPanel1.setToolTipText("Admin");

        requestTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "room", "Firstname", "Lastname", "phone num.", "statas"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        requestTable.setGridColor(new java.awt.Color(255, 255, 255));
        requestTable.setRowHeight(35);
        requestTable.setSelectionBackground(new java.awt.Color(153, 255, 255));
        requestTable.setSelectionForeground(new java.awt.Color(0, 51, 51));
        jScrollPane1.setViewportView(requestTable);
        if (requestTable.getColumnModel().getColumnCount() > 0) {
            requestTable.getColumnModel().getColumn(0).setResizable(false);
            requestTable.getColumnModel().getColumn(1).setResizable(false);
            requestTable.getColumnModel().getColumn(2).setResizable(false);
            requestTable.getColumnModel().getColumn(3).setResizable(false);
            requestTable.getColumnModel().getColumn(4).setResizable(false);
        }

        adminText.setFont(new java.awt.Font("Segoe UI", 0, 18)); // NOI18N
        adminText.setText("Brooking Dorm - Admin Panel");

        Approve.setText("Approve");
        Approve.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ApproveActionPerformed(evt);
            }
        });

        Reject.setText("Reject");
        Reject.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                RejectActionPerformed(evt);
            }
        });

        save_to_csv.setText("Save To User in Dorm");
        save_to_csv.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_to_csvActionPerformed(evt);
            }
        });

        jButton1.setText("Logout");

        userTable.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "room", "Firstname", "Lastname", "phone num."
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        userTable.setGridColor(new java.awt.Color(255, 255, 255));
        userTable.setRowHeight(35);
        userTable.setSelectionBackground(new java.awt.Color(153, 255, 255));
        userTable.setSelectionForeground(new java.awt.Color(0, 51, 51));
        jScrollPane2.setViewportView(userTable);
        if (userTable.getColumnModel().getColumnCount() > 0) {
            userTable.getColumnModel().getColumn(0).setResizable(false);
            userTable.getColumnModel().getColumn(1).setResizable(false);
            userTable.getColumnModel().getColumn(2).setResizable(false);
            userTable.getColumnModel().getColumn(3).setResizable(false);
        }

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("User In Dorm");

        jLabel3.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel3.setForeground(new java.awt.Color(0, 51, 204));
        jLabel3.setText("User Request ");

        Approve1.setText("Delete");
        Approve1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                Approve1ActionPerformed(evt);
            }
        });

        save_to_csv1.setText("Save User");
        save_to_csv1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                save_to_csv1ActionPerformed(evt);
            }
        });

        DormSelect.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Item 1", "Item 2", "Item 3", "Item 4" }));
        DormSelect.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                DormSelectActionPerformed(evt);
            }
        });

        jButton3.setText("RoomManage");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton2.setText("addDorm");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(237, 237, 237)
                .addComponent(jLabel3)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 442, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addGap(277, 277, 277))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(39, 39, 39))))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(66, 66, 66)
                .addComponent(Approve, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(60, 60, 60)
                .addComponent(Reject, javax.swing.GroupLayout.PREFERRED_SIZE, 101, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(48, 48, 48)
                .addComponent(save_to_csv)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(Approve1, javax.swing.GroupLayout.PREFERRED_SIZE, 99, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(66, 66, 66)
                .addComponent(save_to_csv1)
                .addGap(121, 121, 121))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(23, 23, 23)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 527, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(adminText)
                        .addGap(91, 91, 91)
                        .addComponent(DormSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(26, 26, 26)
                        .addComponent(jButton2)))
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(29, 29, 29)
                        .addComponent(jButton3)
                        .addContainerGap(500, Short.MAX_VALUE))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 504, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(29, 29, 29))))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(16, 16, 16)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(adminText, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton1, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(DormSelect, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton3, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jButton2, javax.swing.GroupLayout.PREFERRED_SIZE, 44, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jLabel2))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 278, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 47, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(Approve1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(save_to_csv1, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(save_to_csv, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Reject, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(Approve, javax.swing.GroupLayout.PREFERRED_SIZE, 45, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(65, 65, 65))))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(0, 0, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void ApproveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ApproveActionPerformed
        int selected = requestTable.getSelectedRow();
    if (selected != -1) {
         String room = (String) requestTable.getValueAt(selected, 0);
        String firstname = (String) requestTable.getValueAt(selected, 1);
        String lastname = (String) requestTable.getValueAt(selected, 2);
        String phone = (String) requestTable.getValueAt(selected, 3);
        
        // เพิ่มไป userTable
        UserModel.addRow(new Object[]{room, firstname, lastname, phone});
        
        // ลบออกจาก requestTable!
        requestModel.removeRow(selected);
    } else {
        javax.swing.JOptionPane.showMessageDialog(this, "Plz select Approve or  Reject");
    }
    }//GEN-LAST:event_ApproveActionPerformed

    private void RejectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_RejectActionPerformed
        int selected = requestTable.getSelectedRow();
    if (selected != -1) {
        requestTable.setValueAt("Rejected", selected, 4);
    } else {
        javax.swing.JOptionPane.showMessageDialog(this, "Rejected Error");
    }
    }//GEN-LAST:event_RejectActionPerformed

    private void save_to_csvActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_to_csvActionPerformed
        saveCSV(requestModel, "src/main/java/com/mycompany/dormnew/File/requests.csv");
        saveCSV(UserModel, "src/main/java/com/mycompany/dormnew/File/User_admin.csv");

    }//GEN-LAST:event_save_to_csvActionPerformed

    private void Approve1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Approve1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Approve1ActionPerformed

    private void Reject1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_Reject1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_Reject1ActionPerformed

    private void save_to_csv1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_save_to_csv1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_save_to_csv1ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        String dormName = JOptionPane.showInputDialog(this, "Add Dorm Name :");
    
    if (dormName != null && !dormName.trim().isEmpty()) {   
        addDormToCSV(dormName.trim());
        DormSelect.addItem(dormName.trim());
        JOptionPane.showMessageDialog(this, "Add  \"" + dormName + "\" Complete!");
    } else {
        JOptionPane.showMessageDialog(this, "Add unComplete!");
    }
    }//GEN-LAST:event_jButton2ActionPerformed

    private void DormSelectActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_DormSelectActionPerformed
        String selectedDorm = (String) DormSelect.getSelectedItem();
    if (selectedDorm != null && !selectedDorm.isEmpty()) {
        String fileName = "src/main/java/com/mycompany/dormnew/File/requests_" 
                          + selectedDorm.replaceAll("\\s+", "") + ".csv";
        
        // ลบข้อมูลเก่าก่อน
        requestModel.setRowCount(0);
        
        java.io.File file = new java.io.File(fileName); 
        if (!file.exists()) {
            try (PrintWriter pw = new PrintWriter(file)) {//Create File.csv
                // เขียน header ลงไฟล์
                pw.println("Room,Firstname,Lastname,Phone_num,status");
            } catch (IOException e) {
                JOptionPane.showMessageDialog(this, "Create file failed: " + fileName);
            }
        }
        
        loadCSV(requestModel, fileName);
    }
    }//GEN-LAST:event_DormSelectActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed

        RoomAdmin room = new RoomAdmin();
        room.setVisible(true);
    }//GEN-LAST:event_jButton3ActionPerformed
   


    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ReflectiveOperationException | javax.swing.UnsupportedLookAndFeelException ex) {
            logger.log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(() -> new Admin().setVisible(true));
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton Approve;
    private javax.swing.JButton Approve1;
    private javax.swing.JComboBox<String> DormSelect;
    private javax.swing.JButton Reject;
    private javax.swing.JLabel adminText;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JTable requestTable;
    private javax.swing.JButton save_to_csv;
    private javax.swing.JButton save_to_csv1;
    private javax.swing.JTable userTable;
    // End of variables declaration//GEN-END:variables
}
